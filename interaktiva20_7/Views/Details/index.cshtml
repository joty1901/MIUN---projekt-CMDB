@model MoviesViewModel

<div class="gtco-section">
    <div class="gtco-container">
        <div class="row">
            <div id="detailsImg" class="col-md-4 animate-box">
                <img src="@Model.selectedMovie.Poster" onerror="this.src = '/images/missingimage.jpg'"/>

                <ul id="detailsList">
                    <li><button id="thumbs-up" accesskey="@Model.selectedMovie.ImdbID"><a class="icon-thumbs-up">@Model.selectedMovie.numberOfLikes</a></button></li>
                    <li><button id="thumbs-down" accesskey="@Model.selectedMovie.ImdbID"><a class="icon-thumbs-down">@Model.selectedMovie.numberOfDislikes</a></button></li>
                </ul>
             
            </div>

            <div id="detailsUpper" class="col-md-5 col-md-push-1 animate-box">
                <div>
                    <h2>@Model.selectedMovie.Title</h2>
                    <p id="plot">@Model.selectedMovie.Plot</p>
                    <a id="read-more" hidden>Read more</a>
                    <p><span style="font-weight: bold;">Runtime:</span> @Model.selectedMovie.Runtime</p>
                    <p><span style="font-weight: bold;">Genre:</span> @Model.selectedMovie.Genre</p>
                    <p><span style="font-weight: bold;">Actors:</span> @Model.selectedMovie.Actors</p>
                    <p><span style="font-weight: bold;">Director:</span>@Model.selectedMovie.Director</p>
                    <p><span style="font-weight: bold;">Released:</span> @Model.selectedMovie.Released</p>
                    <ul id="ratingsList">
                        @if (@Model.selectedMovie.Ratings.Find(x => x.Source == "Internet Movie Database") != null)
                        {
                            <li><p><span><image src="images/imdb.png"></image></span> @Model.selectedMovie.Ratings.Find(x => x.Source == "Internet Movie Database").Value</p></li>
                        }
                        else
                        {
                            <li><p><span><image src="images/imdb.png"></image></span>Unrated</p></li>
                        }

                        @if (@Model.selectedMovie.Ratings.Find(x => x.Source == "Rotten Tomatoes") != null)
                        {
                            <li><p><span><image src="images/rottentomatoes.png"></image></span> @Model.selectedMovie.Ratings.Find(x => x.Source == "Rotten Tomatoes").Value</p></li>
                        }
                        else
                        {
                            <li><p><span><image src="images/rottentomatoes.png"></image></span>Unrated</p></li>
                        }
                        @if (@Model.selectedMovie.Ratings.Find(x => x.Source == "Metacritic") != null)
                        {
                            <li><p><span><image src="images/metacritic.png"></image></span> @Model.selectedMovie.Ratings.Find(x => x.Source == "Metacritic").Value</p></li>
                        }
                        else
                        {
                            <li><p><span><image src="images/metacritic.png"></image></span>Unrated</p></li>
                        }
                    </ul>
                    <input id="hidden-imdbid" type="hidden" value="@Model.selectedMovie.ImdbID" />
                </div>
            </div>
        </div>
    </div>
</div>
<div id="gtco-features-2">
    <div class="gtco-container">
        <h1 style="text-align: center;">Top 2-4 Rated Movies</h1>

        <div class="row">
            <div class="col-md-8 col-md-offset-2 text-center gtco-heading">
            </div>
        </div>

        <div class="row">
            @for (int i = 1; i < Model.topMovies.Count; i++)
            {
                <div class="col-md-4">
                    <div class="feature-center animate-box" data-animate-effect="fadeIn">
                        <img style="max-width: 300px; max-height: 450px;" src="@Model.topMovies[i].Poster" onerror="this.src = '/images/missingimage.jpg'" />
                        <h3>@Html.DisplayFor(item => Model.topMovies[i].Title)</h3>

                        <ul id="detailsList">
                            <li><button id="thumbs-up" accesskey="@Model.topMovies[i].ImdbID"><a class="icon-thumbs-up">@Model.topMovies[i].numberOfLikes</a></button></li>
                            <li><button id="thumbs-down" accesskey="@Model.topMovies[i].ImdbID"><a class="icon-thumbs-down">@Model.topMovies[i].numberOfDislikes</a></button></li>
                        </ul>

                        <p>@Html.DisplayFor(item => Model.topMovies[i].ShortPlot)</p>

                        <a asp-action="Index" asp-controller="Details" asp-route-id="@Model.topMovies[i].ImdbID">
                            <button class="btn btn-primary btn-outline" type="button">
                                More
                            </button>
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Expand plot JS -->
<script src="~/js/plotHandler.js"></script>